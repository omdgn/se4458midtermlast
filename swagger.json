openapi: 3.0.0
info:
  title: Airline Company API
  version: 1.0.0
  description: API documentation for Airline Company project. Admins can manage flights, and users can interact via the mobile app.
servers:
  - url: http://localhost:3000
    description: Local Development Server
tags:
  - name: Authentication
    description: Endpoints for user authentication
  - name: Admin
    description: Endpoints for admin operations
  - name: Mobile App
    description: Endpoints for mobile app users
paths:
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Admin Login
      description: Authenticate admin users and return a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: password
              required:
                - username
                - password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              example:
                token: eyJhbGciOiJIUzI1NiIsIn...
        '401':
          description: Authentication failed
          content:
            application/json:
              example:
                error: Invalid username or password
  /api/admin/flights:
    post:
      tags:
        - Admin
      summary: Add a flight
      description: Create a new flight with origin, destination, and other details.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                origin:
                  type: string
                  example: New York
                destination:
                  type: string
                  example: Los Angeles
                capacity:
                  type: integer
                  example: 150
                dates:
                  type: array
                  items:
                    type: string
                    example: '2024-12-01'
              required:
                - origin
                - destination
                - capacity
                - dates
      responses:
        '201':
          description: Flight created successfully
          content:
            application/json:
              example:
                message: Flight created successfully.
        '400':
          description: Invalid data
          content:
            application/json:
              example:
                error: Invalid input data.
  /api/flights:
    get:
      tags:
        - Mobile App
      summary: Search Flights
      description: Find flights by origin, destination, and date.
      parameters:
        - name: origin
          in: query
          required: true
          schema:
            type: string
            example: New York
        - name: destination
          in: query
          required: true
          schema:
            type: string
            example: Los Angeles
        - name: date
          in: query
          required: true
          schema:
            type: string
            example: '2024-12-01'
      responses:
        '200':
          description: List of flights
          content:
            application/json:
              example:
                flights:
                  - id: 1
                    origin: New York
                    destination: Los Angeles
                    date: '2024-12-01'
                    capacity: 150
  /api/tickets/buy:
    post:
      tags:
        - Mobile App
      summary: Buy a Ticket
      description: Purchase a ticket for a flight.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                flight_id:
                  type: integer
                  example: 1
                passenger_name:
                  type: string
                  example: John Doe
              required:
                - flight_id
                - passenger_name
      responses:
        '201':
          description: Ticket purchased successfully
          content:
            application/json:
              example:
                ticket_id: 123
                message: Ticket purchased successfully.
  /api/tickets/checkin:
    post:
      tags:
        - Mobile App
      summary: Check-in
      description: Check-in for a booked ticket.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ticket_id:
                  type: integer
                  example: 123
              required:
                - ticket_id
      responses:
        '200':
          description: Check-in successful
          content:
            application/json:
              example:
                message: Check-in successful.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
